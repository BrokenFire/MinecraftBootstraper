/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.8/userguide/tutorial_java_projects.html
 */
buildscript {
    dependencies {
        classpath group: 'de.dynamicfiles.projects.gradle.plugins', name: 'javafx-gradle-plugin', version: '8.8.2'
    }
    
    repositories {
        mavenLocal()
        mavenCentral()

    }
}


plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'
    id 'idea'
}

def versionObj = new Version(major: 1, minor: 0, revision: 0)

archivesBaseName = "MCBootstarper"
version = "$versionObj"


apply plugin: 'javafx-gradle-plugin'

// Define the main class for the application
mainClassName = 'App'


dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    compile 'com.google.code.gson:gson:2.8.5'


    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
}

repositories {
    jcenter()
}


jar.doFirst {
    delete "${buildDir}/libs/*"
}

jar {
    manifest {
        attributes(
                'Main-Class': 'fr.BrokenFire.Main'
        )
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    delete "${buildDir}/libs/*"
    baseName = 'MCBootstarper'
}


class Version {
    String major, minor, revision

    static String getBuild() {
        System.getenv("BUILD_NUMBER") ?: System.getProperty("BUILD_NUMBER") ?:
                System.getenv("GIT_COMMIT")?.substring(0, 7) ?: System.getProperty("GIT_COMMIT")?.substring(0, 7) ?:"DEV"
    }

    String toString() {
        "${major}.${minor}.${revision}_$build"
    }
}

